upstream whmcs {
    server whmcs:9000;
}

server {
    listen 443 ssl;

    server_name {{ default .Env.WHMCS_SERVER_NAME "whmcs.test" }};
    ssl_certificate {{ default .Env.WHMCS_CERT_PATH }};
    ssl_certificate_key {{ default .Env.WHMCS_CERT_KEY_PATH }};
    ssl_protocols TLSv1.1 TLSv1.2;

    root   /var/www/whmcs;
    index  index.php index.html;

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    {{ if .Env.REAL_IP_FROM }}
    set_real_ip_from  {{ default .Env.SERVER_REAL_IP "172.16.0.0/12" }};
    real_ip_header    X-Forwarded-For;
    real_ip_recursive on;
    {{ end }}

    add_header X-Frame-Options "SAMEORIGIN";
    add_header Strict-Transport-Security "max-age=31536000";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Hide Server Version
    server_tokens off;

    # Hide PHP Version
    fastcgi_hide_header X-Powered-By;
    proxy_hide_header X-Powered-By;

    # Fix whmcs bridge unable to reset password
    # Basic URL Rewrite only
    if ($args ~ "rp=/password/reset/redeem/[a-z0-9]+") {
        set $delimeter "&";
        set $args "${args}${delimeter}ccce=index";
        rewrite ^/(.*)$ {{ default .Env.WHMCS_BRIDGE_URL }} permanent;
    }
 
    location / {
        try_files $uri $uri/ /index.php$is_args$args;
    }
    
    location /admin/ {
        try_files $uri $uri/ /admin/index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_index   index.php;
        fastcgi_pass    whmcs;
        include         fastcgi_params;
        fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
        {{ if .Env.SERVER_ADDR }}
        fastcgi_param   SERVER_ADDR        {{ default .Env.SERVER_ADDR }};
        {{ end }}
        fastcgi_param   HTTPS              on;
        fastcgi_keep_conn on;
        fastcgi_intercept_errors on;
    }

    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 405;
    }

    location ^~ /vendor/ {
        deny all;
        return 403;
    }

    location ~* \.(css|js|png|jpe?g|gif|ico|woff|woff2|otf|ttf|eot|svg|txt|pdf|docx?|xlsx?)$ {
        root /srv/whmcs;
        expires max;
        access_log off;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        add_header Vary "Accept-Encoding";

        {{ if .Env.WORDPRESS_SERVER_NAME }}
        if ($http_origin ~* "^https?://({{ replace .Env.WORDPRESS_SERVER_NAME " " "|" -1 }})$") {
           add_header Access-Control-Allow-Origin "$http_origin";
        }
        {{ else }}
        if ($http_origin ~* "^https?://(wordpress.test)$") {
           add_header Access-Control-Allow-Origin "$http_origin";
        }
        {{ end }}
    }

    location ~ /(\.|bower.json|composer.json|LICENSE|package.json|gulpfile.js) {
        deny all;
    }
}

